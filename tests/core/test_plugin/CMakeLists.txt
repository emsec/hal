set(TEST_PLUGIN_LIB "test_plugin")
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
include_directories(SYSTEM ${PYBIND11_INCLUDE_DIR} SYSTEM ${Python3_INCLUDE_DIRS})


file(GLOB_RECURSE TEST_PLUGIN_INC ${CMAKE_CURRENT_SOURCE_DIR}/include/*.h)
file(GLOB_RECURSE TEST_PLUGIN_SRC ${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp)
#file(GLOB_RECURSE PYTHON_BINDING_LIB_SRC ${CMAKE_CURRENT_SOURCE_DIR}/python/python_definitions.cpp)

add_library(${TEST_PLUGIN_LIB} SHARED ${TEST_PLUGIN_SRC} ${PYTHON_BINDING_LIB_SRC} ${TEST_PLUGIN_INC})

#Set shared library suffix for MacOS
if(APPLE AND CMAKE_HOST_APPLE)
    set_target_properties(${TEST_PLUGIN_LIB} PROPERTIES SUFFIX ".so")
    set_target_properties(${TEST_PLUGIN_LIB} PROPERTIES
            INSTALL_NAME_DIR ${PLUGIN_LIBRARY_INSTALL_DIRECTORY}
            )

endif(APPLE AND CMAKE_HOST_APPLE)
target_link_libraries(${TEST_PLUGIN_LIB} hal::core hal::netlist  ${Python3_LIBRARIES} pybind11::pybind11 ${BUDDY_LIBRARY})
install(TARGETS ${TEST_PLUGIN_LIB} LIBRARY DESTINATION ${PLUGIN_LIBRARY_INSTALL_DIRECTORY} PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE INCLUDES DESTINATION ${PLUGIN_INCLUDE_INSTALL_DIRECTORY})
install(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/ DESTINATION ${PLUGIN_INCLUDE_INSTALL_DIRECTORY}/test_plugin/include/)
if(${CMAKE_BUILD_TYPE} STREQUAL "Debug")
    add_sanitizers(${TEST_PLUGIN_LIB})
endif()


